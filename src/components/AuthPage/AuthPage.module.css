/* src/components/AuthPage/AuthPage.module.css */
.AuthPage {
  min-height: 100vh;
  background: var(--background); /* Uses --background from global.css */
  display: flex;
  justify-content: center;
  align-items: center;
  padding: var(--spacing-xl);
  position: relative;
  overflow: hidden;
  transition: background-color 0.3s ease;
}

.container {
  position: relative;
  width: 100%;
  max-width: 480px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-xl);
  background: var(--surface); /* Uses --surface from global.css */
  border-radius: var(--radius-lg);
  padding: var(--spacing-xl);
  box-shadow: 0 6px 24px var(--shadow); /* Uses --shadow from global.css */
  border: 1px solid rgba(226, 232, 240, 0.2); /* Subtle border with variable opacity */
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

.header {
  text-align: center;
  animation: fadeIn 1s ease-in;
}

.title {
  color: var(--text); /* Uses --text for light/dark mode */
  font-size: 2.2rem;
  font-weight: var(--font-weight-bold);
  letter-spacing: 1px;
}

.subtitle {
  color: var(--text-light); /* Uses --text-light for light/dark mode */
  font-size: 1.1rem;
  opacity: 0.8;
}

.toggleContainer {
  display: flex;
  background: rgba(44, 62, 80, 0.1); /* Light mode default */
  border-radius: 50px;
  padding: 0.4rem;
  transition: background-color 0.3s ease;
}

:global(.dark) .toggleContainer {
  background: rgba(148, 163, 184, 0.2); /* Adjusted for dark mode with --text-light */
}

.toggleButton {
  flex: 1;
  padding: 0.8rem 1.5rem;
  border: none;
  background: transparent;
  color: var(--text); /* Uses --text for light/dark mode */
  font-size: 1rem;
  font-weight: var(--font-weight-bold);
  text-transform: uppercase;
  letter-spacing: 1px;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.toggleButton span {
  position: relative;
  z-index: 1;
}

.toggleButton::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(44, 62, 80, 0.2), transparent);
  transition: all 0.5s ease;
}

:global(.dark) .toggleButton::after {
  background: linear-gradient(90deg, transparent, rgba(148, 163, 184, 0.3), transparent); /* Dark mode shine */
}

.toggleButton:hover::after {
  left: 100%;
}

.toggleButton.active {
  background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%); /* Uses --primary and --primary-dark */
  border-radius: 25px;
  color: var(--surface); /* White text in active state */
  box-shadow: 0 0 15px var(--shadow);
}

.formWrapper {
  width: 100%;
  transition: all 0.3s ease;
}

.formWrapper.animate {
  transform: scale(0.95);
  opacity: 0;
}

.footer {
  color: var(--text-light); /* Uses --text-light for light/dark mode */
  font-size: 0.9rem;
  opacity: 0.7;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-sm); /* 0.5rem */
}

.darkModeToggle {
  padding: var(--spacing-sm); /* 0.5rem */
  background: transparent;
  border: 1px solid rgba(226, 232, 240, 0.3); /* Subtle border */
  border-radius: var(--radius-sm); /* 6px */
  color: var(--text); /* Matches text color */
  font-size: 1.2rem;
  cursor: pointer;
  transition: all 0.3s ease;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
}

:global(.dark) .darkModeToggle {
  border: 1px solid rgba(148, 163, 184, 0.3); /* Dark mode border */
}

.darkModeToggle:hover {
  background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%); /* Matches toggleButton active state */
  color: var(--surface); /* White on hover */
  border-color: transparent;
  box-shadow: 0 2px 8px var(--shadow);
  transform: translateY(-2px);
}

/* Animation */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-20px); }
  to { opacity: 1; transform: translateY(0); }
}